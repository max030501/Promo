// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/promo": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all promos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/promo.Promo"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Create new promo",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "json_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/promo.Promo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Field validation failed on the 'required' tag",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/promo/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves promo by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/promo.ResponsePromo"
                        }
                    },
                    "400": {
                        "description": "There is no promo with id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Edit promo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json body",
                        "name": "json_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/promo.RequestPromo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "There is no promo with id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Do raffle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/promo.RaffleResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no promo with id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Count of participants and prizes is not equal or empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete promo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "There is no promo with id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/promo/{id}/participant": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Create new participant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json body",
                        "name": "json_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/participant.Participant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "There is no promo with id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/promo/{id}/participant/{partId}": {
            "delete": {
                "summary": "Delete participant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Participant ID",
                        "name": "partId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "There is no participant with id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/promo/{id}/prize": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Create new prize",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json body",
                        "name": "json_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/prize.Prize"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "There is no promo with id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/promo/{id}/prize/{prizeId}": {
            "delete": {
                "summary": "Delete prize",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Prize ID",
                        "name": "prizeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "There is no prize with id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "participant.Participant": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "prize.Prize": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "promo.Promo": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "promo.RaffleResponse": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "promo.RequestPromo": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "promo.ResponsePromo": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "participants": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/participant.Participant"
                    }
                },
                "prizes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/prize.Prize"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Products_Store",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
